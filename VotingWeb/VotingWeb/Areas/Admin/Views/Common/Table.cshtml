@using VotingWeb.Properties
@using TableGenerator.Models
@model TableModel

<div id="content">
    <div class="float-right">
        @if (Model.BackController != null)
        {
            @Html.ActionLink(AdminRes.BUTTON_BACK, "Index", Model.BackController, new { id = Model.BackId }, new { @class = "btn btn-info" })
        }
        @Html.ActionLink(Model.ButtonCreateText, "Create", Model.ControllerName, new { id = Model.ButtonCreateId }, new { @class = "btn btn-success" })
    </div>
    <h1>@Model.Title</h1>
    <div class="grid-view">
        <table class="table table-striped">
            <thead>
                <tr>
                    @foreach (var column in Model.ColumnList)
                    {
                        <th scope="col">@column.Title</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var row in Model.RowList)
                {
                    <tr>
                        @for (int columnIndex = 0; columnIndex < Model.ColumnList.Count; columnIndex++)
                        {
                            var column = Model.ColumnList[columnIndex];
                            if (column.IsStringColumn())
                            {
                                <td>@row.ValueList[columnIndex].StringValue</td>
                            }
                            else if (column.ColumnType == ColumnTypeEnum.Integer)
                            {
                                <td>@row.ValueList[columnIndex].IntValue</td>
                            }
                            else if (column.ColumnType == ColumnTypeEnum.ActionButtons)
                            {
                                <td>
                                    @if (Model.IsEditable)
                                    {
                                        @Html.ActionLink(AdminRes.BUTTON_UPDATE, "Update", Model.ControllerName, new { id = row.Ident }, new { @class = "btn btn-primary" })
                                    }
                                    @Html.ActionLink(AdminRes.BUTTON_DELETE, "Delete", Model.ControllerName, new { id = row.Ident }, new { @class = "btn btn-danger" })
                                </td>
                            }
                            else if (column.ColumnType == ColumnTypeEnum.ExtraButton)
                            {
                                <td>
                                    @Html.ActionLink(column.ButtonTitle, column.ButtonAction, column.ButtonController, new { id = row.Ident }, new { @class = "btn btn-info" })
                                </td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row">
        @if (Model.FirstPageIndex.HasValue)
        {
            @Html.ActionLink(AdminRes.PAGE_FIRST, "Index", Model.ControllerName, new { page = Model.FirstPageIndex.Value, id = Model.ButtonCreateId }, new { @class = "btn btn-light" })
        }
        @if (Model.PrevPageIndex.HasValue)
        {
            @Html.ActionLink(AdminRes.PAGE_PREV, "Index", Model.ControllerName, new { page = Model.PrevPageIndex.Value, id = Model.ButtonCreateId }, new { @class = "btn btn-light" })
        }
        @foreach (var page in Model.PageList)
        {
            if (page.IsCurrent)
            {
                <button type="button" class="btn btn-info" disabled>@page.Title</button>
            }
            else
            {
                @Html.ActionLink(page.Title, "Index", Model.ControllerName, new { page = page.PageIndex, id = Model.ButtonCreateId }, new { @class = "btn btn-light" })
            }
        }

        @if (Model.NextPageIndex.HasValue)
        {
            @Html.ActionLink(AdminRes.PAGE_NEXT, "Index", Model.ControllerName, new { page = Model.NextPageIndex.Value, id = Model.ButtonCreateId }, new { @class = "btn btn-light" })
        }
        @if (Model.LastPageIndex.HasValue)
        {
            @Html.ActionLink(AdminRes.PAGE_LAST, "Index", Model.ControllerName, new { page = Model.LastPageIndex.Value, id = Model.ButtonCreateId }, new { @class = "btn btn-light" })
        }
    </div>
</div>
